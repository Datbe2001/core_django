# Generated by Django 4.2.7 on 2024-05-24 06:44

import core.apps.engine.models_container.enum_type
import core.apps.engine.models_container.user
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(blank=True, max_length=128)),
                ('full_name', models.CharField(max_length=128)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('referral', models.CharField(blank=True, max_length=30, null=True)),
                ('pre_referral', models.CharField(blank=True, max_length=30, null=True)),
                ('is_active', models.BooleanField(blank=True, default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('verify_code', models.CharField(blank=True, max_length=10)),
                ('password_2fa', models.CharField(blank=True, max_length=256, null=True)),
                ('role', models.CharField(choices=[('SUPER_ADMIN', 'SUPER_ADMIN'), ('ADMIN', 'ADMIN'), ('USER', 'USER')], default=core.apps.engine.models_container.enum_type.SystemRoleEnum['USER'], max_length=30)),
                ('address_wallet', models.CharField(blank=True, max_length=128, null=True)),
                ('password_wallet', models.CharField(blank=True, max_length=128, null=True)),
                ('soft_delete', models.BooleanField(blank=True, default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', core.apps.engine.models_container.user.CustomUserManager()),
            ],
        ),
    ]
